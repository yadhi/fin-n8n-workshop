{
  "name": "MainAgent",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body_chatInput }}",
        "options": {
          "systemMessage": "=## Overview\nYou are a Financial Advisor Expert work in Algoritma Data Science School. You have some Agent that have specialization in certain cases, you can delegate the task to that agent acording to their specialization. You also have access to company knowledge through Vector database tools.\n\n## Available Tools & Agent to delegate the task\nYou have access to tools:\n1. **Sectors App Agent**: Agent specializing to perform API request to Sectors App API. Sectors App is an Indonensian Financial Data Platform providing access to financial data of almost all Indonesian company listed in IDX. use this Agent if user askin anything related to financial that need backed by data.\n2. **WebSearch Agent**: Agent specializing to perform web search. delegate task to this agent if you need to search for real time information or validate your answer when unsure.\n4. **Vectore Store Knowledge**: This is a tool to grab any information about Algoritma Data Science School stored in a vector databases"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -272,
        656
      ],
      "id": "17462e43-ca8f-402a-9026-4bee753a7870",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -288,
        864
      ],
      "id": "ab95f9e1-11c7-4d2a-9668-c9beda2c0e99",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "YaQMagMVTfhoiScC",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionId }} - {{ $workflow.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -160,
        928
      ],
      "id": "bb8d391a-0272-4372-8c0d-fb3243e57d7b",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "YQuL6XdWi68UHh0w",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Makes an HTTP request google gemini API with web search tools capability",
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-goog-api-key",
              "value": "={{ $vars.gemini_API }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [\n    {\n      \"parts\": [\n        {\n          \"text\": \"{{ $fromAI(\"prompt\", \"Prompt given by the user\")}}\"\n        }\n      ]\n    }\n  ],\n  \"tools\": [\n    {\n      \"google_search\": {}\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        -112,
        1488
      ],
      "id": "b34b2cc3-470d-4880-8c4f-bb0d50914a6b",
      "name": "WebSearch"
    },
    {
      "parameters": {
        "content": "Sectors tools to get financial data",
        "height": 400,
        "width": 720
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        208,
        1248
      ],
      "typeVersion": 1,
      "id": "a4a42164-0a64-4773-a70e-8acad2d137e6",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "web search tools using Gemini API",
        "height": 368,
        "width": 304
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -224,
        1248
      ],
      "typeVersion": 1,
      "id": "e6ad08f7-b889-4f71-898e-7954bdebf3db",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "vector database for knowledge retrieval about company's data",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "topK": 10,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.3,
      "position": [
        -576,
        912
      ],
      "id": "65af92c4-6c53-41b4-819c-68f5ec6d48be",
      "name": "Vectore Store Knowledge",
      "credentials": {
        "supabaseApi": {
          "id": "PTGSswS6SgNC7aCK",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-embedding-001"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        -512,
        1088
      ],
      "id": "313bf642-ea3f-4b96-9949-dcaa03b11012",
      "name": "Embeddings Google Gemini1",
      "credentials": {
        "googlePalmApi": {
          "id": "YaQMagMVTfhoiScC",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "AI Agent specialized in calling Sectors App API",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "=## Overview\nYou have access to the Sectors Financial API companies list endpoint through an HTTP request tool. This endpoint allows you to filter and analyze companies by subsector or sub-industry with sorting capabilities on various financial metrics.\n\n## Available Tools\nYou have access to two tools:\n1. **GetSubsector**: Returns list of all available subsectors from Sectors API\n2. **GetCompanies**: Makes the companies list API call\n3. **GetSubsectorReport**: Return report of a given subsector, organized into distinct sections\n4. **GetCompanyQuarterlyFinancials**: Return quarterly financials metrics of a given ticker\n\n## When to Use This Endpoint\nUse this endpoint when users ask about:\n- Companies in specific sectors or industries\n- Company rankings by financial metrics\n- Comparative analysis within industries\n- Investment opportunities in particular sectors\n- Market leaders in specific business areas\n- The market capitalization data of the given subsector\n- The stability metrics of the given subsector\n- The valuation data of the given subsector\n- The growth metrics of the given subsector\n- The top companies data of the given subsector\n- The net cash flow from operating activities.\n- The total assets owned by the company.\n- The total liabilities of the company.\n- The total current liabilities of the company.\n- The total equity of the company.\n- The total revenue generated by the company.\n- The net income of the company.\n- The total debt held by the company.\n- The equity attributable to stockholders.\n- The earnings before interest and taxes (EBIT).\n- The earnings before interest, taxes, depreciation, and amortization (EBITDA).\n- The cash and short‑term investments available.\n- The cash only available with the company.\n- The total cash and funds due from banks.\n- The number of diluted shares outstanding.\n- The gross income of the company.\n- The income earned before taxes.\n- The total income taxes paid by the company.\n- The total non‑current assets owned by the company.\n- The free cash flow available after operational and capital expenses.\n- The interest expenses incurred from non‑operating activities.\n- The income earned from operating activities.\n- A collection of bank‑specific balance‑sheet and income‑statement line items:\n- Total interest earned on loans and investments.\n- Total interest paid on deposits and borrowings.\n- Total interest income minus interest expense.\n- Outstanding loans before allowances.\n- Loan‐loss reserves.\n- gross loan less allowance for loans.\n- Assets that earn interest (e.g. securities, loans).\n- Customer checking balances.\n- Customer savings balances.\n- Fixed‑term deposit balances.\n- Sum of all deposit types.\n- Borrowings and debt other than deposits.\n- Cash and interbank balances.\n- Funds spent on property, plant, and equipment. Only for non‑financial companies (e.g. mining, manufacturing).\n- Investment in completed capital goods (e.g. machinery output). Also only for non‑financial companies where applicable.\n\n\n## Workflow: Subsector Validation Process\n\n### ALWAYS Follow This 2-Step Process:\n\n#### Step 1: Validate Subsector Name\n**Before making any companies list API call, ALWAYS use the GetSubsector tool first to:**\n- Get the complete list of available subsectors\n- Verify the exact spelling and formatting required\n- Find the closest match to user's request if needed\n\n#### Step 2: Make Companies List API Call\nOnly after confirming the correct subsector name, proceed with the HTTP request.\n\n\n### Subsector Validation Examples:\n\n**User asks: \"Show me banking companies\"**\n1. ✅ First: Use GetSubsector tool\n2. ✅ Find: \"banks\" (not \"banking\")\n3. ✅ Then: Make API call with `sub_sector=banks`\n\n**User asks: \"Technology companies\"**\n1. ✅ First: Use GetSubsector tool  \n2. ✅ Check available options (might be \"software\", \"hardware\", etc.)\n3. ✅ Ask user for clarification or choose most relevant\n4. ✅ Then: Make API call with correct parameter\n\n### Handling Subsector Mismatches:\n\n**If user's requested subsector doesn't exist:**\n- Show available subsectors from GetSubsector response\n- Suggest the closest alternatives\n- Ask user to choose or proceed with your best match\n- Explain why you're suggesting specific alternatives\n\n**Example response for mismatch:**\n```\nI checked the available subsectors and \"technology\" isn't a direct match. However, I found these related options:\n- \"software\" - for software companies\n- \"semiconductors\" - for chip manufacturers  \n- \"telecommunications\" - for telecom companies\n\nWhich would you prefer, or would you like me to analyze software companies as the closest match?\n```\n\n## HTTP Request Configuration\n\n### Base URL\n```\nGET https://api.sectors.app/v1/companies/\n```\n\n### Required Headers\n```\nAuthorization: <API_KEY>\n```\n\n### Query Parameters\n**Choose ONE filter (never use both):**\n- `sub_sector`: Use for broader sector filtering (e.g., \"banks\", \"financing-service\", \"insurance\", \"retailing\", \"tobacco\")\n- `sub_industry`: Use for more specific industry filtering (e.g., \"paper\", \"life-insurance\", \"personal-care-products\", \"software\", \"gold\")\n\n**Format requirements:** Always use kebab-case (lowercase, separated by hyphens)\n\n**Optional sorting parameters:**\n- `sort_by`: Choose from `symbol`, `company_name`, `market_cap`, `dividend_yield`, `total_dividend`, `revenue`, `earnings`, `pb`, `pe`, `ps`\n- `desc`: Set to `true` for descending order, `false` for ascending (default: `false`)\n\n### Example Request Structure\n```\nGET https://api.sectors.app/v1/companies/?sub_sector=banks&sort_by=market_cap&desc=true\n```\n\n## Response Analysis Guidelines\n\n### 1. Data Interpretation\nWhen you receive the response:\n- **DO NOT** return raw JSON data to users\n- Analyze the data for meaningful insights\n- Identify top performers, trends, and notable patterns\n- Compare metrics across companies where relevant\n\n### 2. Key Metrics to Focus On\n- **Market Cap**: Company size and market value\n- **P/E Ratio**: Valuation relative to earnings\n- **P/B Ratio**: Valuation relative to book value\n- **Dividend Yield**: Income potential for investors\n- **Revenue & Earnings**: Financial performance indicators\n\n### 3. Insight Categories to Provide\n\n**Market Leaders:**\n- Identify companies with highest market caps\n- Note dominant players in the sector/industry\n\n**Valuation Analysis:**\n- Compare P/E and P/B ratios to identify potentially undervalued/overvalued stocks\n- Highlight companies with attractive valuations\n\n**Income Opportunities:**\n- Point out high dividend-yielding companies\n- Analyze dividend sustainability based on other metrics\n\n**Growth Potential:**\n- Identify companies with strong revenue/earnings growth\n- Note emerging players vs established leaders\n\n### 4. Response Format\n\n**Always structure your response with:**\n\n1. **Executive Summary** (2-3 sentences)\n   - Key findings from the data\n   - Most important insights for investors\n\n2. **Top Companies** (3-5 companies)\n   - Brief analysis of market leaders\n   - Why they stand out\n\n3. **Investment Insights**\n   - Valuation observations\n   - Risk/opportunity highlights\n   - Sector-specific considerations\n\n4. **Notable Mentions**\n   - Interesting outliers or emerging companies\n   - Unique characteristics worth noting\n\n### 5. Example Response Structure\n```\nBased on the banking sector analysis:\n\n**Executive Summary:**\nThe banking sector shows [key insight about valuations/performance]. Market leaders like [Company A] dominate with $X billion market cap, while [trend observation] across the sector.\n\n**Top Market Leaders:**\n1. [Company Name] - $X billion market cap, P/E of Y, notable for [specific strength]\n2. [Company Name] - Strong dividend yield of X%, indicating [analysis]\n3. [Company Name] - Trading at attractive P/B ratio of X, suggesting [insight]\n\n**Investment Insights:**\n- Valuation: [Analysis of sector valuations compared to historical norms]\n- Income: [Dividend yield analysis and sustainability]\n- Risk Factors: [Sector-specific considerations]\n\n**Notable Mentions:**\n[Highlight 1-2 interesting smaller companies or unusual metrics]\n```\n\n## Error Handling & Edge Cases\n\n### GetSubsector Tool Issues:\n**If GetSubsector tool fails:**\n- Inform user that subsector validation is temporarily unavailable\n- Proceed with commonly known subsectors (banks, insurance, retailing) if confident\n- Suggest user try again later for verification\n\n**If subsector not found in GetSubsector response:**\n- List 3-5 closest alternative subsectors\n- Explain the difference between alternatives\n- Let user choose or proceed with your recommended match\n\n### If API Returns Limited Data:\n- Provide a summary of available information\n- Explain limitations clearly\n- Suggest alternative approaches or related sectors to explore\n\n### If No Companies Match Criteria:\n- Double-check subsector name was validated correctly\n- Suggest similar or related sectors from GetSubsector results\n- Provide general market context\n\n### If Companies List Request Fails:\n- Verify subsector name matches exactly what GetSubsector returned\n- Check if the API key is properly configured\n- Inform user of technical issues and suggest retry\n\n## Best Practices\n\n1. **ALWAYS validate subsectors first** - Use GetSubsector tool before every companies list API call\n2. **Always contextualize data** - Don't just list numbers, explain what they mean\n3. **Compare relatively** - Show how companies rank against peers\n4. **Consider market conditions** - Factor in current market environment when relevant\n5. **Highlight actionable insights** - Focus on information useful for investment decisions\n6. **Keep responses concise but comprehensive** - Balance detail with readability\n7. **Handle ambiguity gracefully** - When multiple subsectors could match user's request, offer choices\n\n## Sample User Queries & Complete Workflow\n\n**\"Show me the top software companies\"**\n1. ✅ Use GetSubsector tool to confirm \"software\" is available\n2. ✅ Use `sub_industry=software`, sort by `market_cap`, desc=true\n3. ✅ Analyze and provide insights\n\n**\"Which banks pay the best dividends?\"**\n1. ✅ Use GetSubsector tool to verify \"banks\" subsector exists\n2. ✅ Use `sub_sector=banks`, sort by `dividend_yield`, desc=true\n3. ✅ Focus analysis on dividend sustainability and yields\n\n**\"Find undervalued insurance companies\"**\n1. ✅ Use GetSubsector tool to confirm \"insurance\" is correct\n2. ✅ Use `sub_sector=insurance`, sort by `pb` or `pe`, desc=false\n3. ✅ Analyze for low ratios and value opportunities\n\n**\"Show me tech companies\" (ambiguous request)**\n1. ✅ Use GetSubsector tool to see available options\n2. ✅ Present options: \"software\", \"semiconductors\", etc.\n3. ✅ Ask user to clarify or proceed with most relevant match\n4. ✅ Make API call and analyze results\n\n## if you need to access sub sector report using GetSubSectorReport tools\n\n### HTTP Request Configuration\n\n### Base URL\n```\nGET https://api.sectors.app/v1/subsector/report/{sub_sector}/\n```\n### Required Headers\n```\nAuthorization: <API_KEY>\n```\n\n### Path Parameters\n- `sub_sector`: Subsector for which the report is to be retrieved. e.g. \"banks\", \"insurance\", \"retailing\".\n\n\n### Example Request Structure\n```\nGET https://api.sectors.app/v1/subsector/report/banks/\n```\n\ncurl sample\n```\ncurl --request GET \\\n  --url 'https://api.sectors.app/v1/subsector/report/banks/?sections=market_cap' \\\n  --header 'Authorization: <API_KEY>'\n```\n\n### Documentation for this endpoint \nhttps://docs.sectors.app/api-references/report/subsector\n\n### Validation\n1. the 'sub_sector' parameter is case sensitive, you can find it in 'sub_sector' when you use GetSubsector tool\n\n2. the 'sections' parameter is case sensitive. valid sections options are statistics, market_cap, stability, valuation, growth, companies. if user not specified the sections, don't add any query parameter in the url. if user specified the sections, add `?sections={sections}` in the url. if user specified multiple sections, join them with comma. e.g. `?sections=market_cap,valuation`\n\n3. if you think the end point not return correct answer, try resend sub_sector and sections using english, or you may need to verify the spelling using GetSubsectors tool\n\n## If you need to access quarterly financial report using GetCompanyQuarterlyFinancials tools\n\n### HTTP Request Configuration\n\n### Base URL\n```\nGET https://api.sectors.app/v1/financials/quarterly/{ticker}/\n```\n\n### Required Headers\n```\nAuthorization: <API_KEY>\n```\n\n\n### Path Parameters\n- `ticker`: Ticker of the company for which the quarterly financials are to be retrieved. e.g. \"BBRI\" for PT Bank BRI (Persero) Tbk. ASII, BBCA, BBRI, BMRI, BYAN.\n\n### Example Request Structure\n```\nGET https://api.sectors.app/v1/financials/quarterly/BBRI/\n```\n\ncurl sample\n```\ncurl --request GET \\\n  --url 'https://api.sectors.app/v1/financials/quarterly/BBRI/?approx=true' \\\n  --header 'Authorization: <API_KEY>'\n```\n\n### Documentation for this endpoint \nhttps://docs.sectors.app/api-references/report/company-quarterly-financials\n\n### Validation\n\n1. the 'ticker' parameter is case sensitive, you can find it in 'symbol' when you use GetCompanies tool\n2. if user need to know report from specific date or quarter, you must find it first from this endpont https://api.sectors.app/v1/company/get_quarterly_financial_dates/{ticker}/\n3. always use `?approx=true` in the end of the url to get the closest date if the exact date is not available\n\n\n\n\nRemember: Your goal is to transform raw financial data into actionable investment insights that help users make informed decisions."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        272,
        1296
      ],
      "id": "d61d2003-0c49-4e5e-b476-f83c4aa3b6bd",
      "name": "Sectors App Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        176,
        1616
      ],
      "id": "d56611dd-d1d9-4dee-ac83-7812fde72405",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "YaQMagMVTfhoiScC",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "AI Agent specialized in searching the web to get real time information and validate unsure opinion",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "You are an Agent specialized in web search. you have access to WebSearch tools to perform browsing and retrieve information from the internet"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        -208,
        1328
      ],
      "id": "036931f3-c9f5-4bba-9bad-2cef57d7c3ea",
      "name": "Web Searching Agent"
    },
    {
      "parameters": {
        "toolDescription": "Makes an HTTP request and returns list of subsectors data from Sectors App",
        "url": "https://api.sectors.app/v1/subsectors",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        320,
        1488
      ],
      "id": "52415915-12c5-46b5-a417-e9212d4584d1",
      "name": "GetSubsectors",
      "credentials": {
        "httpHeaderAuth": {
          "id": "cH2BV6DXUzaB186i",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', ``, 'string') }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Name', ``, 'string') }}",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', ``, 'string') }}"
            },
            {
              "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Name', ``, 'string') }}",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', ``, 'string') }}"
            },
            {
              "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters2_Name', ``, 'string') }}",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters2_Value', ``, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        448,
        1488
      ],
      "id": "6634dd23-5a5b-4dbe-869d-f02a9d98ba60",
      "name": "GetCompanies",
      "credentials": {
        "httpHeaderAuth": {
          "id": "cH2BV6DXUzaB186i",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "use this tool too retrieve data from vector store. contains all knowledge about company data",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "topK": 10,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.3,
      "position": [
        432,
        912
      ],
      "id": "76ac8409-9bd9-4ff9-9292-9240b9633e1f",
      "name": "Supabase Vector Store1",
      "credentials": {
        "supabaseApi": {
          "id": "PTGSswS6SgNC7aCK",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-embedding-001"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        608,
        1072
      ],
      "id": "6364fdc9-b9f1-4662-ac8c-77bec7015f5a",
      "name": "Embeddings Google Gemini2",
      "credentials": {
        "googlePalmApi": {
          "id": "YaQMagMVTfhoiScC",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e677fb29-d647-4aab-8074-36790408e9c2",
              "name": "output",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        64,
        656
      ],
      "id": "3ab2d733-af4f-4056-b770-1364c46c8a27",
      "name": "Return"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "body_chatInput",
              "type": "any"
            }
          ]
        }
      },
      "id": "68686eb1-724c-489f-8a63-9b9655408d58",
      "typeVersion": 1.1,
      "name": "Start",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -480,
        656
      ]
    },
    {
      "parameters": {
        "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', ``, 'string') }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Name', ``, 'string') }}",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', ``, 'string') }}"
            },
            {
              "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Name', ``, 'string') }}",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', ``, 'string') }}"
            },
            {
              "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters2_Name', ``, 'string') }}",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters2_Value', ``, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        592,
        1488
      ],
      "id": "f7661cec-a98b-4441-afce-c8754f0f2a63",
      "name": "GetSubSectorReport",
      "credentials": {
        "httpHeaderAuth": {
          "id": "cH2BV6DXUzaB186i",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', ``, 'string') }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Name', ``, 'string') }}",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', ``, 'string') }}"
            },
            {
              "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Name', ``, 'string') }}",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', ``, 'string') }}"
            },
            {
              "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters2_Name', ``, 'string') }}",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters2_Value', ``, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        768,
        1488
      ],
      "id": "69986a83-ace0-4a7d-a279-8f17d558ee3e",
      "name": "GetCompanyQuarterlyFinancials11111",
      "credentials": {
        "httpHeaderAuth": {
          "id": "cH2BV6DXUzaB186i",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', ``, 'string') }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "=approx",
              "value": "=true"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        752,
        1376
      ],
      "id": "78f79a0f-93be-4724-b4c5-e540e483e175",
      "name": "GetCompanyQuarterlyFinancials",
      "credentials": {
        "httpHeaderAuth": {
          "id": "cH2BV6DXUzaB186i",
          "name": "Header Auth account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "WebSearch": {
      "ai_tool": [
        [
          {
            "node": "Web Searching Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Vectore Store Knowledge": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini1": {
      "ai_embedding": [
        [
          {
            "node": "Vectore Store Knowledge",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Sectors App Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Sectors App Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Web Searching Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Web Searching Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetSubsectors": {
      "ai_tool": [
        [
          {
            "node": "Sectors App Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetCompanies": {
      "ai_tool": [
        [
          {
            "node": "Sectors App Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini2": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Start": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetSubSectorReport": {
      "ai_tool": [
        [
          {
            "node": "Sectors App Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetCompanyQuarterlyFinancials11111": {
      "ai_tool": [
        []
      ]
    },
    "GetCompanyQuarterlyFinancials": {
      "ai_tool": [
        [
          {
            "node": "Sectors App Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "549c4def-06af-40d7-ae2e-ff5497a1c6d3",
  "meta": {
    "instanceId": "d9561b20e363e353ee760d20e64e65da6d3b92f63da0091c23661c30e573fb18"
  },
  "id": "VCPCnephfx6Fnm0d",
  "tags": []
}